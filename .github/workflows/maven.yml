name: Java CICD

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: [ubuntu-latest]
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Build Project
        run: mvn clean install -DskipTests
      - name: Amazon ECR "Login" Action for GitHub Actions
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry: ${{ secrets.ECR_REPO_URL }}
          region: ${{ secrets.AWS_DEFAULT_REGION }}
      - name: Build docker image
        run: docker build -t integrationninjas/springboot-example .
      - name: Publish image to docker hub
        run: docker push integrationninjas/springboot-example:latest
  deploy:
    needs: build
    runs-on: [ubuntu-latest]
    steps:
      - name: Pull Image from ECR
        run: docker pull integrationninjas/springboot-example:latest
      - name: Delete old container
        run: docker rm -f springboot-example-container
      - name: Run docker container
        run: docker run -d -p 8080:8080 --name springboot-example-container integrationninjas/springboot-example
      - name: SSH into EC2 and Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_KAMP_EC2_IP }}
          username: ${{ secrets.AWS_KAMP_EC2_USER }}
          key: ${{ secrets.PRIVATE_KEY_PEM }}
          script: |
            docker run -d -p 8080:8080 --name springboot-example-container integrationninjas/springboot-example
